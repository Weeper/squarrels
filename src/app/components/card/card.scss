$card-height: (
	small: 180,
	medium: 270
);
$card-width: (
	small: 100,
	medium: 200
);
$card-width-stack: 60;
$num-cards: 20;

$card-images: (
	'blank--',
	'number--1',
	'number--2',
	'number--3',
	'number--4',
	'number--5',
	'action--ambush',
	'action--communism',
	'action--hoard',
	'action--quarrel',
	'action--whirlwind',
	'action--winter',
	'special--golden',
	'special--rotten'
);

@mixin generate-cards {
	@each $name in $card-images {
		&.#{$name} {
			background-image: url('../assets/images/#{$name}.png');
		}
	}
}

.card {
	@include generate-cards;

	background-repeat: no-repeat;
	background-size: contain;
	height: inherit;
	outline: none;

	&:focus {
		outline: none;
	}
}

%playing-cards {
	position: relative;

	card,
	.card {
		height: rem-calc(map-get($card-height, 'small'));
		position: absolute;
		width: rem-calc(map-get($card-width, 'small'));
	}

	.card {
		@include generate-cards;

		color: get-color(white);
		display: block;
		font-size: 4rem;
	}

	[role='button'] {
		display: block;
		height: 100%;
	}
}

@media (min-width: $screen-md-min) {
	%playing-cards {
		card,
		.card {
			height: rem-calc(map-get($card-height, 'medium'));
			width: rem-calc(map-get($card-width, 'medium'));
		}
	}
}

.action-card {
	.card {
		animation-fill-mode: forwards;
		backface-visibility: hidden;
	}

	[card-type='blank'] {
		.card {
			animation-duration: 4s;
			animation-name: spin;
			animation-timing-function: linear;
		}
	}

	[card-type='action'] {
		.card {
			animation-delay: 3s;
			animation-duration: 1s;
			animation-name: spin-reverse;
			animation-timing-function: ease-out;
			transform: rotateY(-90deg);
		}
	}
}
