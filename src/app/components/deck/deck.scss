@import '../card/card';

deck {
	flex: 1;
	height: rem-calc(map-get($card-height, 'small'));
	position: relative;
	width: rem-calc(map-get($card-width, 'small'));

	.count {
		@include center-horizontal;

		font-size: 2rem;
		top: -30%;
		z-index: 1;
	}

	&[type='main'] {
		.deck {
			// box-shadow: 4px 6px 1px get-color('pickled-bean');
			border: 2px outset get-color(zest);
		}
	}

	&[type='discard'] {
		border: 1px dashed get-color(black);
		padding: 1rem;

		.deck {
			border: 2px dashed transparent;

			&.drag-enter {
				border-color: get-color('zest');
			}

			.card {
				$rotate: 0;

				@for $i from 1 through 20 {
					&:nth-child(#{$i}) {
						transform: rotate(#{$rotate}deg);
					}

					$rotate: $rotate + 5;
				}
			}
		}
	}

	&[type='action'] {
		border: 2px inset get-color(carnaby-tan);

		.card {
			animation: .5s linear shrink;
		}
	}

	.deck {
		@extend %playing-cards;

		display: block;
		height: 100%;
		margin: 0 auto;
		width: 100%;

		.cards-group {
			margin: 0 auto;
			width: rem-calc(map-get($card-width, 'small'));
		}
	}

	@media (min-width: $screen-md-min) {
		$height: map-get($card-height, 'medium') + 8;
		height: rem-calc($height);
		width: rem-calc(map-get($card-width, 'medium'));

		.count {
			font-size: 4rem;
			top: -25%;
		}

		&[type='discard'] {
			height: rem-calc($height + 48);
			padding: 2rem;
		}

		.deck {
			.cards-group {
				width: rem-calc(map-get($card-width, 'medium'));
			}
		}
	}
}
